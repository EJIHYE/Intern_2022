"""
아서 왕이 천장에 삼각형 창이 있는 방에 원탁을 놓을 계획을 세우고 있다. 그는 햇빛이 원탁 위에 비추게 하고 싶다.
특히 정오에 태양이 바로 머리 위에 있을 때는 원탁 전체에 햇빛이 비추도록 하려고 한다.
그래서 그 원탁은 방 안의 특정한 삼각형 영역 안에 자리잡아야 한다. 물론 아서 왕은 주어진 조건 내에서 최대한 큰 원탁을 만들고 싶어한다.
멀린이 점심을 먹으러 나간 사이에 해가 비추는 영역에 들어갈 수 있는 가장 큰 원탁의 반지름을 계산하는 프로그램을 만들어야 한다.

Input
테스트 케이스의 개수에는 제한이 없으며, 각 테스트 케이스마다 삼각형의 세 변의 길이를 나타내는 실수 세 개(a,b,c)가 입력된다.
어떤 변의 길이도 1,000,000을 넘지 않으며, max(a,b,c) ≤ (a+b+c)/2 라고 가정해도 된다.
파일 끝에 다다를 때까지 계속 입력을 받는다.

output
각 테스트 케이스마다 다음과 같은 결과를 출력한다.
The radius of the round table is: r
여기에서 r은 정오에 해가 비추는 영역에 들어갈 수 있는 원탁의 최대 반지름이며, 소수점 셋째 자리까지 반올림한 값을 출력한다.

Sample Input
12.0 12.0 8.0

Sample Output
The radius of the round table is: 2.828

"""

"""
=============================================================================
과제 1. 아서 왕의 방 안에 존재하는 삼각형 모양 창문의 세 변의 길이가 주어질 때, 창문의 넓이를 구하시오.
        - 조건 : 삼각형의 넓이는 소수 셋째 자리에서 반올림 하시오.
        - 조건 : 연산을 위해 math() 모듈을 import 하여 사용할 수 있음
        - input : 12 12 8
        - 출력 : 45.255
=============================================================================
"""

import math                                             # 수학 모듈 가져오기

# 삼각형 창문의 넓이를 구하는 프로그램 정의 (변수는 a, b, c)
def is_triangle_window(a, b, c):
    # 헤론의 공식에 의하면, s(s-a)(s-b)(s-c)을 루트로 취한 값이 삼각형의 넓이 (s는 (a+b+c)/2)
    heron_s = (a + b + c) / 2
    heron_triangle = math.sqrt(heron_s * (heron_s - a) * (heron_s - b) * (heron_s - c))

    print('{:.3f}'.format(heron_triangle))              # 소수 셋째 자리에서 반올림한 삼각형의 넓이 출력

if __name__ == '__main__':
    # a, b, c 입력받을 때, 공백을 기준으로 분해 후 숫자(정수)로 변환
    a, b, c = map(int, input('삼각형 창문 세 변의 길이를 입력하세요 : ').split())

    is_triangle_window(a, b, c)                         # is_triangle_window 실행
    print()

"""
=============================================================================
과제 2.  아서 왕의 방 안에 존재하는 삼각형 모양 창문의 세 변의 길이가 주어질 때, 
        해가 비추는 영역에 들어갈 수 있는 가장 큰 원탁의 반지름을 구하시오.
        - 조건1 : 햇빛이 비추는 영역은 창문의 모양과 동일함
        - 조건2 : 반지름은 소수 셋째 자리에서 반올림 하시오.
        - 조건 : 연산을 위해 math() 모듈을 import 하여 사용할 수 있음
        - input : 12 12 8
        - 출력 : 2.828
=============================================================================
"""

# 가장 큰 원탁의 반지름을 구하는 프로그램 정의 (변수는 a, b, c)
def is_round_table(a, b, c):
    # 삼각형의 내접원 공식에 의하면, 삼각형의 넓이를 (a+b+c)/2로 나눈 값이 내접원의 반지름
    heron_s = (a + b + c) / 2
    heron_triangle = math.sqrt(heron_s * (heron_s - a) * (heron_s - b) * (heron_s - c))
    r = heron_triangle / heron_s

    # 소수 셋째 자리에서 반올림한 반지름의 길이 출력
    print('The radius of the round table is: {0:.3f}'.format(r))

if __name__ == '__main__':
    print("종료를 원한다면 '0 0 0'을 입력하세요")
    while True:                                         # 다음 행위 무한 반복
        # a, b, c 입력받을 때, 공백을 기준으로 분해 후 숫자(정수)로 변환
        a, b, c = map(int, input('삼각형 창문 세 변의 길이를 입력하세요 : ').split())
        if (a, b, c) == (0, 0, 0):                      # 만약 '0 0 0'을 입력했다면, 프로그램 종료
            print('-------------프로그램을 종료합니다-------------')
            break
        if 1000000 < a or 1000000 < b or 1000000 < c:   # 만약 1,000,000 이상의 길이를 입력했다면, 건너뛰기
            print('변의 길이가 1,000,000을 넘을 수 없습니다.')
            print()
            continue
  
        is_round_table(a, b, c)                         # is_round_table 실행
        print()