'''
어떤 자연수에서 자릿수가 점점 커지는 수를 증가수라고 하겠습니다(예: 135689).
자연수들 중에서는 그 수와 그 수의 자리의 순서가 반대인 수를 곱했을 때(여기서 자리의 순서가 반대가 된다는 것은 숫자의 자리가 앞뒤가 바뀐다는 것입니다, 예: 5319 -> 9135) 증가수가 되는 수들이 있습니다.
예를 들어 47과 47의 자리를 바꾼 74를 곱하면 3478이 되는데, 이 수는 증가수입니다.

세 자리 자연수들 중에 그 수와 그 수의 자리를 바꾼 수의 곱이 증가수가 되는 수는 모두 몇 개입니까?
(단, 세 자리 자연수의 마지막 자릿수는 0이 아니고, 증가수에는 1335 같은 중간에 자릿수의 크기가 바뀌지 않는 것도 포함됩니다.)
'''
"""
========================================================================
과제1. 10과 20 사이의 자연수 중 그 수와 그 수의 자리를 바꾼 수의 곱이 증가수가 되는 자연수를 출력하시오. 
      - 조건1. 세자리 자연수는 마지막 자릿수는 0이 아니다.
      - 조건2. 증가수는 중간 자릿수의 크기는 바뀌지 않는 것도 포함된다.(ex. 1335)
      - 출력값 : 18
========================================================================
"""

for num in range(10, 21):    #10부터 20까지의 수를 차례대로 꺼냄
      multi_num = str(num * int(str(num)[::-1]))   #수와 그 수를 뒤집은 수를 곱하여 문자열 형태로 저장                       
      if all(int(multi_num[i]) <= int(multi_num[i+1]) for i in range(len(multi_num) -1)): #all: 모든 요소가 참인지 판단
            print(num)      #변수의 i번째 인덱스에 위치한 수보다 다음 자릿수가 크거나 같은지 비교, 변수 길이-1까지 반복
                            #모든 자릿수를 차례대로 비교했을 때 참이라면 증가수이므로, 증가수가 되는 수 출력

      
"""
========================================================================
과제2. 세 자리 자연수들 중에 그 수와 그 수의 자리를 바꾼 수의 곱이 증가수가 되는 수는 모두 몇 개입니까? 
      - 조건1. 세자리 자연수는 마지막 자릿수는 0이 아니다.
      - 조건2. 증가수는 중간 자릿수의 크기는 바뀌지 않는 것도 포함된다.(ex. 1335)
      - 출력값 : 21
========================================================================
"""

numcount = 0   #개수를 저장할 변수 지정
for num2_ in range(100, 1000): #100부터 999까지 반복
      if str(num2_)[-1] != '0': #마지막 자릿수가 0이 아니라는 조건 만족시
            multinum_ = str(num2_ * int(str(num2_)[::-1]))  #수와 그 수를 뒤집은 수를 곱하여 문자열 형태로 저장
            if all(int(multinum_[i]) <= int(multinum_[i+1]) for i in range(len(multinum_) -1)):   #증가수인지 판단
                  numcount += 1  #1씩 증가시킴
print(numcount)  #총 개수 출력
            
            