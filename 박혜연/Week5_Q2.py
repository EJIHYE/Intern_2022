"""
음수가 아닌 수들이 주어졌을 때 그 수들을 이어서 만들 수 있는 가장 큰 수를 구하시오.

예를 들어 [1,2,3]이 주어졌을 때 만들 수 있는 가장 큰 수는 321이고, [3, 30, 34, 5, 9] 가 주어지면 만들 수 있는 가장 큰 수는 9534330이다.
"""
"""
========================================================================
과제1. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - num_list = [1, 2, 3] 
      - 출력값 : 321
========================================================================
"""

# n = list(input('리스트 구성 요소를 입력해주세요 : ').split(', '))
# #입력받을 때 ', '로 리스트 구성 요소 구분
#
# def Large(a):
#     a = list(map(str, a))
#     #map 함수를 통해 리스트의 구성 요소를 모두 str로 변환
#     a.sort(key = lambda x : x*3, reverse = True)
#     #문자열을 3번 곱해서 '111', '333'과 같은 형태로 반환
#     #문자열의 경우, 가장 앞의 문자부터 비교하기 때문
#     #따라서 '111' > '222' > '333'이 되기 때문에 내림차순으로 정렬
#     return ''.join(a)
#
# print(Large(n))


"""
========================================================================
과제2. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - 조건 2. 아래와 같은 입력값을 도출하시오. 
      - num_list = [3, 30, 34, 5, 9] 
      - 출력값 : 9,534,330
========================================================================
"""

def Large(a):
    a = list(map(str, a))
    a.sort(key = lambda x : x*3, reverse = True)
    return str(int(''.join(a)))

def Same(b):
    b = str(b)
    if len(b) <= 3:
        return b
    else:
        return Same(b[:-3]) + ',' + b[-3:]
    #5번 공식 변형 후 적용
    #음수가 아닌 자연수이므로 '-', '.'를 고려한 부분 제외

if __name__ == '__main__':
    n = list(input('리스트 구성 요소를 입력해주세요 : ').split(', '))

    print(Same(Large(n)))