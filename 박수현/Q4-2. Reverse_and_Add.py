"""
일단 어떤 수를 받아서 그 수를 뒤집은 다음 뒤집어진 수를 원래의 수에 더하는 과정을 뒤집어서 더하기라고 부르자.
그 합이 회문(palindrome, 앞뒤 어느 쪽에서 읽어도 같은 말이 되는 어구. 예:eye, madam, 소주만병만주소)이 아니면 회문이 될 때까지 이 과정을 반복한다.
예를 들어 처음에 195에서 시작해서 다음과 같이 네 번 뒤집어서 더하기를 반복하면 9339라는 회문이 만들어진다.

 195      786       1473      5214
+591     +687      +3741     +4125
----     -----     -----     -----
 786     1473       5214      9339

대부분의 정수는 이 방법을 몇 단계만 반복하면 회문이 된다. 하지만 예외도 있다. 회문을 찾을 수 없는 것으로 밝혀진 첫번째 수는 196이다. 하지만 회문이 없다는 것이 증명된 적은 없다.

어떤 수가 주어졌을 때 회문이 있으면 출력하고, 그 회문을 찾기까지 뒤집어서 더하기를 반복한 횟수를 출력하는 프로그램을 만들어야 한다.
테스트 데이터로 사용되는 수는 모두 뒤집어서 더하기를 1,000번 미만 반복해서 회문을 찾을 수 있는 수고, 그렇게 만들어진 회문을 4,294,967,295보다 크지 않다고 가정해도 된다.

Input
첫번째 줄에는 테스트 케이스를 나타내는 정수 N(0<N<=100)이 들어있고, 그 아래로 N개의 줄에 걸쳐서 회문을 구해야 하는 정수가 한 줄에 하나씩 들어있다.

Output
N개의 각 정수에 대해 회문을 발견하는 데 필요한 최소한의 반복 횟수를 출력하고, 스페이스를 한 칸 출력한 다음, 그 회문을 출력한다.

Sample Input
3
195
265
750

Sample Output
4 9339
5 45254
3 6666
"""

"""
=============================================================================
과제 1. input 값의 회문을 발견하는데 필요한 최소한의 반복 횟수를 출력하고, 스페이스를 한 칸 출력한 다음
       그 회문을 출력하시오.
        - input = 195
        - output = 4 9339
=============================================================================
"""

# 뒤집어서 더하기를 반복하여 회문을 만드는 프로그램 정의 (변수는 input_num)
def is_palindrome_count(input_num):
    count_num = 0                                       # count_num = 반복한 횟수 (시작은 0)

    for i in range(1000):                               # 다음 행위를 1,000번 반복 
        if input_num == int(str(input_num)[::-1]):      # 만약 회문이라면, 반복한 횟수와 회문 출력 후 종료
            print(count_num, input_num)
            break
        else:                                           # 회문이 아니라면, 뒤집어서 더한 후 반복한 횟수 카운트
            input_num += int(str(input_num)[::-1])
            count_num += 1

if __name__ == '__main__':
    input_num = int(input('정수를 입력하세요 : '))       # input_num 입력받을 때, 이를 숫자(정수)로 변환

    is_palindrome_count(input_num)                      # is_palindrome_count 실행
    print()

"""
=============================================================================
과제 2. input 값 만큼 정수를 입력받아 각 정수별로 가장 작은 회문을 출력하시오
        - 조건1 : 정수를 모두 입력받은 후 결과값을 한꺼번에 출력하시오.
        - 조건2 : 정수를 입력받을 때 input() 함수를 사용하시오.
        - input = 3
        - 입력받을 정수 = 195, 265, 750
        - output :
                    9339
                    45254
                    6666
=============================================================================
"""

# 뒤집어서 더하기를 반복하여 회문을 만드는 프로그램 정의 (변수는 input_num_zip)
def is_palindrome(input_num_zip):
    for input_num in input_num_zip:                     # input_num_zip을 하나씩 분해
        for i in range(1000):                           # 다음 행위를 1,000번 반복 
            if input_num == int(str(input_num)[::-1]):  # 만약 회문이라면, 회문 출력 후 종료
                print(input_num)
                break
            else:                                       # 회문이 아니라면, 뒤집어서 더하기
                input_num += int(str(input_num)[::-1])

if __name__ == '__main__':
    # input_count 입력받을 때, 이를 숫자(정수)로 변환
    input_count = int(input('입력할 정수의 개수를 입력하세요 : '))
    # 만약 범위를 벗어났다면, 예외 발생시키기
    if not 0 < input_count <= 100:
        raise Exception('잘못 입력했습니다. (0 < 정수의 개수 <= 100)')

    # input_num_zip 입력받을 때, 이를 ', ' 기준으로 분해 후 숫자(정수)로 변환
    input_num_zip = list(map(int, input('정수를 입력하세요 : ').split(', ')))

    is_palindrome(input_num_zip)                        # is_palindrome 실행