"""
-----------------  Question  -----------------
지뢰찾기 게임은 M x N 매트릭스에 위치해 있는 지뢰를 찾는 게임이다.
M x N 매트릭스 상의 격자(square)는 지뢰이거나 지뢰가 아니다.
지뢰 격자는 *로 표시한다. 지뢰가 아닌 격자(square)는 숫자로 표시하며 그 숫자는 인접해 있는 지뢰의 수를 의미한다.
(격자(sqaure)는 최대 8개의 인접한 지뢰를 가질 수 있다.)
다음은 4x4 매트릭스에서 2개의 지뢰(*)를 표시하는 방법이다.
 *...
 ....
 .*..
 ....

이 게임의 목표는 지뢰의 위치(*)를 제외한 나머지 격자들의 숫자를 맞추는 것이다.
위 경우의 답은 아래와 같다.
 *100
 2210
 1*10
 1110

입력 : 첫번째 줄은 M x N 의 M(행)과 N(열)에 해당되는 숫자이다.
       N과 M은 0보다 크고 100 이하이다(0< N, M <=100).
       그 다음 M개의 줄이 차례로 입력되고 각 줄은 정확하게 N개의 문자가 입력된다.
       지뢰 격자는 *로 표시하며 지뢰가 아닌 격자는 .(dot)로 표시한다.
출력 : 지뢰(*)를 제외한 나머지 격자의 숫자값을 찾아서 M x N 매트릭스를 출력한다.
----------------------------------------------
"""

"""
==========================================================================
과제 1. input의 숫자만큼 '*'과 '.'으로 구성된 문자열을 출력하시오. 
      - 조건1 : random 모듈을 활용하시오.
      - input = '4'
      - 출력 : *.** 또는 ...* 등등
==========================================================================
"""

import random

lst = []
for i in range(int(input('input: '))):
      lst.append(random.choice(['*', '.']))

print(''.join(lst))

"""
==========================================================================
과제 2. 행과 열을 입력하면 '*'과 '.'으로 구성된 행렬을 출력하시오.
      - 조건1 : random 모듈을 활용하시오.
      - 조건2 : 행과 열은 1보다 크고 100 이하인 정수이다.
      - row = 3
      - column = 6
      - 출력 (예시이며 random 모듈을 사용하였으므로 결과는 다를 수 있음.)
        [['*', '.', '.', '.', '*', '.'], 
        ['.', '.', '*', '.', '.', '.'],
        ['.', '.', '.', '*', '.', '*']]
==========================================================================
"""

import random

lst = []
row = int(input("row: "))
column = int(input("column: "))

for i in range(row):
    lst.append([random.choice(['*', '.'])]*column)

print(lst)

"""
==========================================================================
#과제 3. 과제2에서 생성한 행렬을 이용하여 지뢰(*)를 제외한 나머지 격자의 숫자값을 찾고 행렬을 출력하시오.
      - 조건1 : random 모듈을 활용하시오.
      - 조건2 : 행과 열은 1보다 크고 100 이하인 정수이다.
      - row = 3
      - column = 6
      - 출력 (예시이며 random 모듈을 사용하였으므로 결과는 다를 수 있음.)
        *212*1
        12*332
        012*2*
==========================================================================
"""

import random

row = int(input("row:"))                            #row(행)
column = int(input("column:"))                      #column(열)

if not(column > 1 and row <= 100): 
    raise Exception("N > 1, row <= 100")            # raise Exception:예외발생 # 행과 열은 1보다 크고 100 이하인 정수
rc = [[random.choice(['.','*']) for x in range(column)] for y in range(row)]
    # random.choice():지정된 sequence 내의 범주에서 무작위로 1개를 선택하여 추출하는 함수
    # [random.choice(['.','*']) for x in range(n)] -> row(행) 범위 만큼 ['.','*'] 중 랜덤 선택 반복
    # [[random.choice(['.','*']) for x in range(n)] for y in range(m)] -> 열 범위만큼 반복


for y in rc :
    print(''.join(y))   # mn 출력(.*로 이뤄진 랜덤지뢰출력
r = rc.copy()           # r = [['*', '.', '*', '*', '.', '*'], ['.', '.', '*', '.', '.', '*'], ['*', '.', '.', '.', '*', '*']]

for y, yd in enumerate(r):  # enumerate:반복문에서 몇번째 반복문인지 확인할때 사용
                            
    for x, xd in enumerate(yd):

        if r[y][x] == '*': continue                                                 # r의 [y][x]가 * 경우, 계속 진행
        count = 0                                                                   # count = 0 -> 격자 숫자
        c = [[''] if y - 1 < 0 else r[y-1][0 if x - 1 < 0 else x - 1 : x + 2],      # y-1<0이 참인경우, [''] / 참이 아닌경우, r[y-1][0 if x - 1 < 0 else x - 1:x+2]
             r[y][0 if x - 1 < 0 else x - 1:x+2],             
             [''] if y + 1 >= row else r[y+1][0 if x - 1 < 0 else x - 1 : x + 2]]   # X=A if 조건문 else B:X=A이고 그게 아니면 X=b로 가라
        for z in c:
            count+=z.count('*') # 지뢰 개수 카운드
        r[y][x] = str(count)

print("<output>")

for y in r: 
    print(''.join(y))
