'''
여기 배열이 하나 있습니다. 이 배열의 크기는 n으로 106을 넘지 않습니다.
그리고 이 배열의 왼쪽 끝에서 오른쪽 끝으로 움직이고 있는 슬라이딩 윈도우가 있습니다.
이 윈도우의 길이는 k입니다. 여러분은 윈도우 안에 보이는 k개의 수만을 볼 수 있습니다.
윈도우는 한 번에 한 칸씩 오른쪽으로 움직입니다. 다음은 예제입니다.

example
슬라이딩 윈도우가 각 위치에 있을 때 보이는 최대값과 최소값이 무엇인지 구하는 것이 여러분에게 주어진 문제입니다.

입력
입력은 두 개의 줄로 이루어져 있습니다.
첫 번째 줄은 배열의 길이와 슬라이딩 윈도우의 길이를 나타내는 두 개의 정수n과 k를 담고 있습니다.
다음 줄에 배열의 내용을 나타내는 n개의 정수가 담겨 있습니다.

출력
출력은 두 개의 줄을 담고 있어야 합니다.
첫 번째 줄은 윈도우가 왼쪽에서 오른쪽으로 움직일 때마다 윈도우에 보이는 최소값을 나타냅니다. 두번째 줄은 최대값입니다.

Sample Input
8 3
1 3 -1 -3 5 3 6 7

Sample Output
-1 -3 -3 -3 3 3
3 3 5 5 6 7
'''
"""
========================================================================
과제1. 아래와 같이 숫자 리스트와 슬라이딩윈도우의 크기가 주어졌을 때, 각각의 슬라이딩윈도우의 최소값과 최대값을 구하시오.
        - sliding_window_size = 3
        - num_list = [1, 3, -1, -3, 5, 3, 6, 7]
        - 최대값 : 3 3 5 5 6 7
        - 최소값 : -1 -3 -3 -3 3 3
========================================================================
"""

max_list = []                                                   # max_list = 최대값의 리스트가 될 빈 리스트
min_list = []                                                   # min_list = 최소값의 리스트가 될 빈 리스트
# sliding_window_size = 슬라이딩 윈도우의 크기를 입력받을 때, 숫자(정수)로 변환
sliding_window_size = int(input('슬라이딩 윈도우의 크기를 입력하세요 : '))
# num_list = 숫자 리스트를 입력받을 때, ', '을 기준으로 분해 후 숫자(정수)로 변환
num_list = list(map(int, input('숫자 리스트를 입력하세요 : ').split(', ')))

if 106 < len(num_list):                                         # 만약 범위를 벗어났다면, 예외 발생시키기
    raise Exception('잘못 입력했습니다. (숫자 리스트 길이는 106 이하)')

for i in range(sliding_window_size, len(num_list) + 1):         # sliding_window_size부터 num_list 길이만큼 다음 행위 반복
    window_num = num_list[i - sliding_window_size:i]            # window_num = num_list에서 윈도우를 통해 보이는 값
    max_list.append(max(window_num))                            # window_num의 최대값을 최대값 리스트에 추가
    min_list.append(min(window_num))                            # window_num의 최소값을 최소값 리스트에 추가

print(f"최대값 : {' '.join(map(str, max_list))}")               # 최대값 리스트 출력
print(f"최소값 : {' '.join(map(str, min_list))}")               # 최소값 리스트 출력