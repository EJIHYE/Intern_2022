"""
앞에서부터 읽을 때나 뒤에서부터 읽을 때나 모양이 같은 수를 대칭수(palindrome)라고 한다.
- 두 자리 수를 곱해 만들 수 있는 대칭수 중 가장 큰 수는 9009 (= 91 × 99)이다.
- 세 자리 수를 곱해 만들 수 있는 가장 큰 대칭수를 구하여라.
"""

"""
==========================================================================
# 과제 1. 세 자리 수를 곱해서 만들들 수 있는 가장 큰 대칭수를 구하시오.
## 출력 : 906609
==========================================================================
==========================================================================
# 과제 2. 출력 값에 천자리 구분기호가 나오도록 변환해 보세요(format()함수 사용)
## 출력 : 906,609
==========================================================================
"""

#1
n = 0  # 변수
a = [] # 리스트
b = [] # 리스트
for i in range(100,1000): # 세 자리수와
    for x in range(100, 1000): # 세 자리수를 곱한 값을 저장
        n = x * i
        a.append(n) # 곱한 값은 a에 저장

for j in range(len(a)): # a에 저장된 값의 개수만큼 반복
    if str(a[j]) == str(a[j])[::-1]: # 처음부터 끝까지 -1칸 간격, 즉 역순으로 정렬한 리스트와 본 리스트를 비교
        b.append(a[j])               # 같은 경우 b에 저장
b.sort()                             # b를 오름차순으로 정렬
print(b[-1])                         # 가장 큰 값을 출력


#2
n = 0
a = []
b = []
for i in range(100,1000):
    for x in range(100, 1000):
        n = x * i
        a.append(n)

for j in range(len(a)):
    if str(a[j]) == str(a[j])[::-1]:
        b.append(a[j])
b.sort()
print(format(b[-1],','))
               
   