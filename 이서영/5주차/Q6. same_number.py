"""
문제
앞뒤가 같은 수는 바로 쓴 값과 거꾸로 쓴 값이 같은 수이다. 다음과 같은 예를 들 수 있다.
1
44
101
2002
8972798
1111111111111

0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99, 101, 111, ... 과 같이, 0 이상의 앞뒤가 같은 수를 크기 순으로 나열할 때, n 번째 수를 계산하는 프로그램을 작성하라.

n은 1부터 시작하며 크기에는 제한이 없다.

입출력예
예 1) 1 => 0
예 2) 4 => 3
예 3) 30 => 202
예 4) 100 => 909
예 5) 30000 => 200000002
예 6) 1000000 => 90000000009
"""
"""
========================================================================
과제1. 앞뒤가 같은 수(n)를 크기순으로 나열하세요 (0 <= n <= 100).
     - 출력값 : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99
========================================================================
"""

result = []
for n in range(1,100):
    a = int(str(n)[:2])                                                 # 처음부터 1까지
    b = 10**(len(str(n))-1)                                             # **:거듭제곱연산자

    if 0 < n < 11:                                                      # 만약 n이 1부터 10사이의 수일 경우
        result.append(n-1)  # n-1 추가
    elif a < 11:                                                        # 만약 a(n의 첫번째수부터 두번째수)가 11보다 작을 경우
        result.append(str(n-int(b/10))+str(n-int(b/10))[-2::-1])
    elif a < 20:                                                        # 만약 a(n의 첫번째수부터 두번째수)가 20보다 작을 경우
        result.append(str(n-b)+str(n-b)[::-1])
    else:                                                               # 위 조건에 해당하지 않을 경우
        result.append(str(n-b)+str(n-b)[-2::-1])
        
output = []

for x in result:
    if 0 <= int(x) <= 100:
        output.append(str(x))

print(', '.join(output))

# slice [start:end:step]:step만큼 문자를 건너뛰면서, start오프셋부터 end-1오프셋까지

"""
========================================================================
과제2. 0 이상의 앞뒤가 같은 수를 크기순으로 나열하고 30,000번째 수를 출력하세요.
      - 출력값 : 200000002
========================================================================
"""
n = 30000
a = int(str(n)[:2])                                     
b = 10**(len(str(n))-1)                                 

if 0 < n < 11:                                          
    print(n-1)                                          
elif a < 11:                                           
    print(str(n-int(b/10))+str(n-int(b/10))[-2::-1])
elif a < 20:
    print(str(n-b)+str(n-b)[::-1])
else:
    print(str(n-b)+str(n-b)[-2::-1])