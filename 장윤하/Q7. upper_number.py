'''
어떤 자연수에서 자릿수가 점점 커지는 수를 증가수라고 하겠습니다(예: 135689).
자연수들 중에서는 그 수와 그 수의 자리의 순서가 반대인 수를 곱했을 때(여기서 자리의 순서가 반대가 된다는 것은 숫자의 자리가 앞뒤가 바뀐다는 것입니다, 예: 5319 -> 9135) 증가수가 되는 수들이 있습니다.
예를 들어 47과 47의 자리를 바꾼 74를 곱하면 3478이 되는데, 이 수는 증가수입니다.

세 자리 자연수들 중에 그 수와 그 수의 자리를 바꾼 수의 곱이 증가수가 되는 수는 모두 몇 개입니까?
(단, 세 자리 자연수의 마지막 자릿수는 0이 아니고, 증가수에는 1335 같은 중간에 자릿수의 크기가 바뀌지 않는 것도 포함됩니다.)
'''
"""
========================================================================
과제1. 10과 20 사이의 자연수 중 그 수와 그 수의 자리를 바꾼 수의 곱이 증가수가 되는 자연수를 출력하시오. 
      - 조건1. 세자리 자연수는 마지막 자릿수는 0이 아니다.
      - 조건2. 증가수는 중간 자릿수의 크기는 바뀌지 않는 것도 포함된다.(ex. 1335)
      - 출력값 : 18
========================================================================
"""
for i in range(10,21):                              # 10과 20사이의 자연수 반복
    if str(i)[-1] == '0':                           # 마지막 글자가 0이면 건너뜀
        continue
    multi_num = str(i * int(str(i)[::-1]))          # 해당 수와 그 수의 자리를 바꾼 수의 곱을 저장
    cnt = 0                                         # 증가하는 자리수의 개수를 저장할 변수
    if multi_num[0] < multi_num[1]:                 # 필수조건 - 첫 번째 자리는 두 번째 자리보다 작아야 함
        for j in range(1, len(multi_num) - 2):      # 그 때 양쪽을 제외한 중간 부분의 인덱스를 반복
            if multi_num[j] <= multi_num[j + 1]:    # 해당 인덱스의 숫자가 그 다음의 숫자보다 작거나 같을 때
                cnt += 1                            # 변수에 1씩 더함
        if multi_num[-1] > multi_num[-2]:           # 마지막 숫자가 그 전 숫자보다 클 때
            cnt += 1                                # 변수에 1을 더함
    if cnt == len(multi_num) - 2:                   # 변수의 값이 곱한 값의 길이에서 2를 뺀 값과 같을 때
                                                    # (첫 번째 두 번째 비교는 cnt 저장 x (46줄), 길이가 5라면 비교는 총 4번, 따라서 2를 뺌)
        print(i)



"""
========================================================================
과제2. 세 자리 자연수들 중에 그 수와 그 수의 자리를 바꾼 수의 곱이 증가수가 되는 수는 모두 몇 개입니까? 
      - 조건1. 세자리 자연수는 마지막 자릿수는 0이 아니다.
      - 조건2. 증가수는 중간 자릿수의 크기는 바뀌지 않는 것도 포함된다.(ex. 1335)
      - 출력값 : 21
========================================================================
"""
##### 중간 자릿수만 동일할 수 있고 첫번째와 두번째, 마지막과 그 전 숫자는 무조건 달라야 하는 경우
upper_num = []                                      # 증가수를 저장할 리스트
for i in range(100, 1000):                          # 100부터 999까지 세자리 자연수 반복
    if str(i)[-1] == '0':                           # 마지막 글자가 0이면 건너뜀
        continue
    multi_num = str(i * int(str(i)[::-1]))          # 해당 수와 그 수의 자리를 바꾼 수의 곱을 저장
    cnt = 0                                         # 증가하는 자리수의 개수를 저장할 변수
    if multi_num[0] < multi_num[1]:                 # 필수조건 - 첫 번째 자리는 두 번째 자리보다 작아야 함
        for j in range(1, len(multi_num) - 2):      # 그 때 양쪽을 제외한 중간의 인덱스를 반복
            if multi_num[j] <= multi_num[j + 1]:    # 해당 인덱스의 숫자가 그 다음의 숫자보다 작거나 같을 때
                cnt += 1                            # 변수에 1을 더함
        if multi_num[-1] > multi_num[-2]:           # 마지막 숫자가 그 전 숫자보다 클 때
            cnt += 1                                # 변수에 1을 더함
    if cnt == len(multi_num) - 2:                   # 변수의 값이 곱한 값의 길이에서 2를 뺀 값과 같을 때
                                                    # (첫 번째 두 번째 비교는 cnt 저장 x (46줄), 길이가 5라면 비교는 총 4번, 따라서 2를 뺌)
        upper_num.append(multi_num)                 # 증가수를 저장

print(len(upper_num))

##### 모든 자리를 같을 수도 있다고 볼 때
upper_num = []                              # 증가수를 저장할 리스트
for i in range(100, 1000):                  # 세 자리 자연수 반복
    if str(i)[-1] == '0':                   # 마지막 글자가 0이면 건너뜀
        continue
    multi_num = str(i * int(str(i)[::-1]))  # 해당 수와 그 수의 자리를 바꾼 수의 곱을 저장
    cnt = 0                                 # 증가하는 자리수의 개수를 저장할 변수
    for j in range(len(multi_num) - 1):         # 마지막 인덱스를 제외하고 반복
        if multi_num[j] <= multi_num[j + 1]:    # 해당 인덱스 수가 그 다음 인ㄷ게스 수보다 작거나 같을 때 cnt에 1씩 더함
            cnt += 1
    if cnt == len(multi_num) - 1:           # 변수의 값이 곱한 값의 길이에서 1을 뺀 값과 같을 때
        upper_num.append(multi_num)         # 증가수를 저장

print(len(upper_num))