"""
-----------------  Question  -----------------
어떤 정수 n에서 시작해, n이 짝수면 2로 나누고, 홀수면 3을 곱한 다음 1을 더한다.
이렇게 해서 새로 만들어진 숫자를 n으로 놓고, n=1 이 될때까지 같은 작업을 계속 반복한다.
예를 들어, n=22이면 다음과 같은 수열이 만들어진다.
- 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1
n이라는 값이 입력되었을때 1이 나올때까지 만들어진 수의 개수(1을 포함)를 n의 사이클 길이라고 한다.
위에 있는 수열을 예로 들면 22의 사이클 길이는 16이다.
i와 j라는 두개의 수가 주어졌을때, i와 j사이의 모든 수(i, j포함)에 대해 최대 사이클 길이를 구하라.
----------------------------------------------
"""
"""
=============================================================================
과제 1. 입력 값(n)이 40일때, 사이클 길이를 구하시오.
       - input = 40
       - 출력 : 9
=============================================================================
"""

def cyclelen(n) :                       # 함수 cyclelen에 n이라는 숫자가 주어졌을 때
    n = [n]                             
    while(n[-1]!=1) :                   # n이 1이 아닐때까지 반복  # n[-1] 리스트 중 가장 마지막에 나온 것 
        if n[-1] % 2 == 0 :             # 짝수일 경우,
            n.append(n[-1]//2)          # 2를 나눈 후, n에 추가
        else:                           # 홀수일 경우,
            n.append(n[-1] * 3 + 1)     # 3을 곱하고 1을 더한 후, n에 추가
    return len(n)                       # 리스트 n의 길이를 구함

print(cyclelen(int(input('input: '))))

"""
=============================================================================
과제 2. i와 j라는 두개의 수가 주어졌을때, i와 j사이의 모든 수에 대한 최대 사이클 길이(i와 j도 사이클 길이에 포함됨)를 구하라.
       - start = 1
       - end = 10
       - 출력 : 20
=============================================================================
"""

def cyclelen(n) :                               # 함수 cyclelen에 n이라는 숫자가 주어졌을 때
    n = [n]                             
    while(n[-1]!=1) :                           # n이 1이 아닐때까지 반복  # n[-1] 리스트 중 가장 마지막에 나온 것 
        if n[-1] % 2 == 0 :                     # 짝수일 경우,
            n.append(n[-1]//2)                  # 2를 나눈 후, n에 추가
        else:                                   # 홀수일 경우,
            n.append(n[-1] * 3 + 1)             # 3을 곱하고 1을 더한 후, n에 추가
    return len(n)                               # 리스트 n의 길이를 구함

i = (int(input('start: ')))             
j = (int(input('end: ')))

print(max([cyclelen(n) for n in range(i, j)]))  # i와 j사이의 사이클 길이의 최대값

"""
=============================================================================
과제 3. i와 j라는 두개의 수가 주어졌을때, i와 j사이의 모든 수에 대한 최대 사이클 길이(i와 j도 사이클 길이에 포함됨)를 구하라.
       - start_num_list = [1, 100, 201, 900]
       - end_num_list = [10, 200, 210, 1000] 
       - 출력 : [20, 125, 89, 174]
=============================================================================
"""
def cyclelen(n) :                               # 함수 cyclelen에 n이라는 숫자가 주어졌을 때
    n = [n]                             
    while(n[-1]!=1) :                           # n이 1이 아닐때까지 반복  # n[-1] 리스트 중 가장 마지막에 나온 것 
        if n[-1] % 2 == 0 :                     # 짝수일 경우,
            n.append(n[-1]//2)                  # 2를 나눈 후, n에 추가
        else:                                   # 홀수일 경우,
            n.append(n[-1] * 3 + 1)             # 3을 곱하고 1을 더한 후, n에 추가
    return len(n)                               # 리스트 n의 길이를 구함

i = list(map(int, input('start: ').split(",")))        
j = list(map(int, input('end: ').split(",")))

maxx = []                                       # 'i와 j사이의 모든 수에 대한 최대 사이클 길이' 리스트
for x in range(len(i)) :
    maxx.append(max([cyclelen(n) for n in range(i[x], j[x])]))  # 'i의 x번째 항목과 j의 x번째 항목' 사이의 사이클 길이 최대값

print(maxx) # 출력
print(", ".join([str(elem) for elem in maxx]))  # [] 없이 출력
                                                # .join([str(elem) for elem in maxx
                                                # maxx안에 elem들을 하나씩 열어서 str형을 지정해서 리스트로 넣고 그걸 join으로 str형으로 바꿈