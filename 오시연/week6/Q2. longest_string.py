'''
여기서의 “부분”은 LCS문제에서의 “부분”과는 다른 의미임을 명심하라. nice라는 문자열이 있다면 이 문제에서의 부분문자열의 집합은 {‘’, n, i, c, e, ni, ic, ce, nic, nice}이다.

LCS문제에서의 “부분”에서는 nce도 하나의 부분문자열로 볼 수 있지만 이 문제에서는 부분문자열이 아니다. (즉, 이 문제에서의 “부분”은 원래 문자열에서 일정 부분을 잘라낸 것이다.)

photography와 autograph 두 문자열이 있다고 할 때, ph, grap, to 등의 부분문자열이 있으며, 이 중 최대의 길이를 갖는 부분문자열은 tograph이다.

입력

두 줄에 각각의 스트링이 주어진다. 각 스트링의 길이는 4000이하이다.

photography
autograph
출력

첫줄에 찾은 부분문자열의 길이, 둘째 줄에 가장 긴 공통의 부분문자열을 출력한다.

7
tograph

'''
"""
========================================================================
과제1. 입력된 문자열의 부분문자열을 구하시오. 
      - 조건1. 부분문자열은 입력된 문자열 안에 연속된 문자열을 의미한다.
      - 조건2. 부분문자열에는 공집합도 포함
      - input_string = 'nice'
      - 출력값 = ['','n','i','c','e','ni','ic','ce','nic','ice','nice']
========================================================================
"""
result = [] #결과 저장할 리스트
input_str = input('string: ')  #입력
for i in range(len(input_str)):   #문자열 길이만큼 반복(0~3)
      for j in range(i, len(input_str) + 1): #i부터 문자열 길이(4)까지 포함하는 반복문
            result.append(input_str[i:j])  #인덱스 i부터 j 전까지 자른 부분문자열을 리스트에 추가
print(list(set(result)))  #중복을 제거한 리스트로 출력

      
"""
========================================================================
과제2. 아래와 같이 두 문자열이 입력되었을 때, 두 문자열의 공통된 부분문자열 중 가장 긴 부분문자열의 길이와 실제값을 출력하시오.
      - 조건1. 부분문자열은 입력된 문자열 안에 연속된 문자열을 의미한다.
      - 조건2. 부분문자열에는 공집합도 포함
      - input_string1 = 'photography'
      - input_string2 = 'autograph'
      - 출력값 = 7 tograph
========================================================================
"""
def stringpart_(str_):       #부분문자열 추출 함수 정의
    return set(str_[i:j] for i in range(len(str_)) for j in range(i, len(str_) + 1)) #슬라이스한 값을 중복 제거한 집합으로 반환

str_1 = input('string1: ')  #두개의 문자열 입력
str_2 = input('string2: ')
result = max(stringpart_(str_1) & stringpart_(str_2), key = len) #부분문자열의 교집합을 구한 뒤 문자열 길이가 가장 큰 것을 반환
print(len(result), result) #문자열 길이와 해당 문자열 출력
