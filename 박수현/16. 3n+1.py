"""
-----------------  Question  -----------------
어떤 정수 n에서 시작해, n이 짝수면 2로 나누고, 홀수면 3을 곱한 다음 1을 더한다.
이렇게 해서 새로 만들어진 숫자를 n으로 놓고, n=1 이 될때까지 같은 작업을 계속 반복한다.
예를 들어, n=22이면 다음과 같은 수열이 만들어진다.
- 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1
n이라는 값이 입력되었을때 1이 나올때까지 만들어진 수의 개수(1을 포함)를 n의 사이클 길이라고 한다.
위에 있는 수열을 예로 들면 22의 사이클 길이는 16이다.
i와 j라는 두개의 수가 주어졌을때, i와 j사이의 모든 수(i, j포함)에 대해 최대 사이클 길이를 구하라.
----------------------------------------------
"""
"""
=============================================================================
과제 1. 입력 값(n)이 40일때, 사이클 길이를 구하시오.
       - input = 40
       - 출력 : 9
=============================================================================
"""

# input_n = 사이클 길이를 구할 값을 입력받을 때, 이를 숫자(정수)로 변환 
input_n = int(input('사이클 길이를 구할 값을 입력하세요 : '))
# num_cycle = 사이클을 진행할 리스트 (입력값부터 시작)
num_cycle = [input_n]

## 사이클을 진행하는 프로그램
while input_n != 1:                              # input_n이 1이 아니라면, 무한 반복
       if input_n % 2 == 0:                      # 만약 input_n이 짝수라면, 2로 나눈 후 리스트에 추가
              input_n //= 2
              num_cycle.append(input_n)
       else:                                     # 짝수가 아니라면(홀수라면), 3을 곱하고 1을 더한 후 리스트에 추가
              input_n *= 3
              input_n += 1
              num_cycle.append(input_n)

print(len(num_cycle))                            # 사이클 길이 출력
print()

"""
=============================================================================
과제 2. i와 j라는 두개의 수가 주어졌을때, i와 j사이의 모든 수에 대한 최대 사이클 길이(i와 j도 사이클 길이에 포함됨)를 구하라.
       - start = 1
       - end = 10
       - 출력 : 20
=============================================================================
"""

# start_n = 구하고자 하는 범위의 시작을 입력받을 때, 이를 숫자(정수)로 변환 
start_n = int(input('구하고자 하는 범위의 시작을 입력하세요 : '))
# end_n = 구하고자 하는 범위의 끝을 입력받을 때, 이를 숫자(정수)로 변환 
end_n = int(input('구하고자 하는 범위의 끝을 입력하세요 : '))
# 사이클 길이들의 리스트가 될 빈 리스트
len_cycle = []

## 사이클 길이를 구하는 프로그램
for input_n in range(start_n, end_n):            # 범위의 시작과 끝 동안 다음 행위를 반복
       num_cycle = [input_n]                     # num_cycle = 사이클을 진행할 리스트 (입력값부터 시작)

       while input_n != 1:                       # input_n이 1이 아니라면, 무한 반복
              if input_n % 2 == 0:               # 만약 input_n이 짝수라면, 2로 나눈 후 리스트에 추가
                     input_n //= 2
                     num_cycle.append(input_n)
              else:                              # 짝수가 아니라면(홀수라면), 3을 곱하고 1을 더한 후 리스트에 추가
                     input_n *= 3
                     input_n += 1
                     num_cycle.append(input_n)
       len_cycle.append(len(num_cycle))          # 사이클 길이를 len_cycle에 추가

print(max(len_cycle))                            # 최대 사이클 길이 츨력
print()

"""
=============================================================================
과제 3. i와 j라는 두개의 수가 주어졌을때, i와 j사이의 모든 수에 대한 최대 사이클 길이(i와 j도 사이클 길이에 포함됨)를 구하라.
       - start_num_list = [1, 100, 201, 900]
       - end_num_list = [10, 200, 210, 1000] 
       - 출력 : [20, 125, 89, 174]
=============================================================================
"""

# start_n_zip = 구하고자 하는 범위의 시작을 입력받을 때, 이를 ', '을 기준으로 분해
start_n_zip = input('구하고자 하는 범위의 시작을 입력하세요 : ').split(', ')
# end_n_zip = 구하고자 하는 범위의 끝을 입력받을 때, 이를 ', '을 기준으로 분해
end_n_zip = input('구하고자 하는 범위의 끝을 입력하세요 : ').split(', ')
# 최대 사이클 길이들의 리스트가 될 빈 리스트
all_len_cycle = []

## 최대 사이클 길이를 구하는 프로그램
for start_n, end_n in zip(start_n_zip, end_n_zip):      # 범위의 시작과 끝 리스트를 하나씩 분해
       len_cycle = []                                   # 사이클 길이들의 리스트가 될 빈 리스트

       for input_n in range(int(start_n), int(end_n)):  # 범위의 시작과 끝 동안 다음 행위를 반복
              num_cycle = [input_n]                     # num_cycle = 사이클을 진행할 리스트 (입력값부터 시작)

              while input_n != 1:                       # input_n이 1이 아니라면, 무한 반복
                     if input_n % 2 == 0:               # 만약 input_n이 짝수라면, 2로 나눈 후 리스트에 추가
                            input_n //= 2
                            num_cycle.append(input_n)
                     else:                              # 짝수가 아니라면(홀수라면), 3을 곱하고 1을 더한 후 리스트에 추가
                            input_n *= 3
                            input_n += 1
                            num_cycle.append(input_n)
              len_cycle.append(len(num_cycle))          # 사이클 길이를 len_cycle에 추가
       all_len_cycle.append(max(len_cycle))             # 최대 사이클 길이를 all_len_cycle에 추가

print(', '.join(map(str, all_len_cycle)))               # 모든 최대 사이클 길이 출력