"""
문제
앞뒤가 같은 수는 바로 쓴 값과 거꾸로 쓴 값이 같은 수이다. 다음과 같은 예를 들 수 있다.
1
44
101
2002
8972798
1111111111111

0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99, 101, 111, ... 과 같이, 0 이상의 앞뒤가 같은 수를 크기 순으로 나열할 때, n 번째 수를 계산하는 프로그램을 작성하라.

n은 1부터 시작하며 크기에는 제한이 없다.

입출력예
예 1) 1 => 0
예 2) 4 => 3
예 3) 30 => 202
예 4) 100 => 909
예 5) 30000 => 200000002
예 6) 1000000 => 90000000009
"""
"""
========================================================================
과제1. 앞뒤가 같은 수(n)를 크기순으로 나열하세요 (0 <= n <= 100).
     - 출력값 : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99
========================================================================
"""

# def Arr(a):
#     for a in range(0, 101):
#     #주어진 n의 범위로 설정
#         l = list(str(a))
#         #식을 간단히 하기 위해 미리 a의 문자열 리스트화
#
#         if a < 10:
#             print(a)
#             a += 1
#         #만약 a가 한 자리 수라면 그대로 출력
#         elif l == list(reversed(l)):
#             print(a)
#             a += 1
#         #만약 a의 문자열 리스트가 리버스 후에도 동일하다면 그대로 출력
#         else:
#             a += 1
#         #위에 해당되지 않을 경우, 다음 a 값으로 이동
#
# if __name__ == '__main__':
#     n = 0
#
#     Arr(n)


"""
========================================================================
과제2. 0 이상의 앞뒤가 같은 수를 크기순으로 나열하고 30,000번째 수를 출력하세요.
      - 출력값 : 200000002
========================================================================
"""

num = int(input('순번을 입력해주세요 : '))
i = 0
list1 = []

while True:
    if str(i) == str(i)[::-1]:
        list1.append(i)
        i += 1
    #문자열 i가 문자열 i의 역순과 같을 경우,
    #i를 리스트에 추가하고 i+1을 확인
    if len(list1) == num:
        break
    #리스트 요소의 개수가 순번과 동일할 경우 break

if __name__ == '__main__':
    print(list1[num-1])
    #리스트의 마지막 인덱스는 num-1

"""
문제점 :

1. 결과값 출력 시간이 오래 걸림
"""