"""
음수가 아닌 수들이 주어졌을 때 그 수들을 이어서 만들 수 있는 가장 큰 수를 구하시오.

예를 들어 [1,2,3]이 주어졌을 때 만들 수 있는 가장 큰 수는 321이고, [3, 30, 34, 5, 9] 가 주어지면 만들 수 있는 가장 큰 수는 9534330이다.
"""
"""
========================================================================
과제1. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - num_list = [1, 2, 3] 
      - 출력값 : 321
========================================================================
"""
# 리스트에 있는 숫자를 크기순 + 역순으로 배열
# 리스트의 숫자들을 문자열로 합치기

num_list = [1, 2, 3]
num_list.reverse()
map(str, num_list)
num_str = list(map(str, num_list))
result = ''.join(num_str)
int(result)


"""
========================================================================
과제2. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - 조건 2. 아래와 같은 입력값을 도출하시오. 
      - num_list = [3, 30, 34, 5, 9] 
      - 출력값 : 9,534,330
========================================================================
"""

# 3과 30만 비교하여 이어서 만들 수 있는 가장 큰 수를 찾아 출력하려면
# 3과 30을 문자열로 만들어 이어붙이고 이어붙인 문자열을 다시 정수로 변환해 크기를 비교해야 한다.
## 예시: '3' + '30'은 330, '30' + '3'은 303
## 330이 더 크므로 330 출력

# 3, 30, 9를 비교하고 같은 일을 수행하려면
# 수를 비교하는 일은 한 번에 두 수끼리만 할 수 있으므로
# 첫 번째 수는 그대로 두고 나머지 수들과 순서대로 비교해야 한다.
# 이때 다른 수가 첫 번째 수보다 먼저 오면 더 큰 수가 만들어질 경우
# 해당 수와 첫번째 수의 위치를 바꾼다.
# 첫 번째 수에서 이러한 비교가 끝나면
# 그 다음 수에서 같은 행동을 반복한다.
# 리스트의 요소들을 순서대로 다른 수와 비교, 위치 변경을 하면 이어붙였을 때 가장 큰 수가 되는 순서대로 저장된다.
# 마지막에는 순서가 정해진 리스트를 format 함수로 쉼표를 붙인 문자열 형태로 출력한다.


num_list = input('number list: ').split(', ')

for i in range(len(num_list)):
    for j in range(i+1, len(num_list)):
        if int(num_list[i] + num_list[j]) < int(num_list[j] + num_list[i]): 
            num_list[i], num_list[j] = num_list[j], num_list[i]

print(format(int(''.join(num_list)),','))