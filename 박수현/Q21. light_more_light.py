"""
우리 학교에는 복도 불을 켜고 끄는 마부(Mabu)라는 사람이 있다.
전구마다 불을 켜고 끄는 스위치가 있다.
불이 꺼져 있을 때 스위치를 누르면 불이 켜지고 다시 스위치를 누르면 불이 꺼진다.
처음에는 모든 전구가 꺼져 있다.
마부라는 사람은 특이한 행동을 한다.
복도에 n개의 전구가 있으면, 복도를 n번 왕복한다.
i번째 갈 때 그는 i로 나누어 떨어지는 위치에 있는 스위치만 누른다.
처음 위치로 돌아올 때는 아무 스위치도 건드리지 않는다.
i번째 왕복은 (이런 이상한 행동을 하면서) 복도를 한 번 갔다가 오는 것으로 정의된다.
마지막 전구의 최종 상태를 알아내자.
과연 그 전구는 켜져 있을까 아니면 꺼져 있을까?

Input : 복도에 있는 n번째 전구를 나타내는 숫자가 입력된다. (2^32-1 이하의 정수가 입력된다.) 0은 입력의 끝을 의미하며 그 값은 처리하지 않는다.
Output : 그 전구가 켜져 있으면 "yes"를, 꺼져 있으면 "no"를 출력한다. 테스트 케이스마다 한 줄에 하나씩 출력한다.

"""


"""
=============================================================================
과제 1 : 복도에 있는 n번째 전구의 최종 상태를 출력하시오.
        - 조건 : 0은 입력의 끝을 의미하며 그 값은 처리하지 않는다.
        input = [3, 6241, 8191, 0] (만약 전구번호가 3이면, 3번 왕복한 후의 전구상태를 출력하는 코드를 짜면 된다.)
        출력 : (테스트 케이스마다 한 줄에 하나씩 출력해야함.)
              no
              yes
              no
=============================================================================
"""

# inpust_light_zip = 상태를 알고 싶은 전구 번호를 입력받을 때, 이를 ', '을 기준으로 분해
input_light_zip = input('상태를 알고 싶은 전구 번호를 입력하세요 : ').split(', ')

## 특정 행위 반복 시 전구의 최종 상태를 출력하는 프로그램
for input_light in input_light_zip:                         # 전구 번호를 하나씩 분해
      if input_light == '0':                                # 만약 전구 번호가 '0'이라면, 프로그램 종료
            break

      light_n = -1                                          # light_n = 전구 상태 (-1은 off, 1은 on)
      for light_on_off in range(1, int(input_light) + 1):   # 전구 번호만큼 다음 행위 반복
            if int(input_light) % light_on_off == 0:        # 만약 전구 번호 % i번째 왕복이 나누어 떨어진다면,
                  light_n *= -1                             # 전구 켜거나 끄기
      
      if light_n == 1:                                      # 만약 전구의 최종 상태가 on이라면, 'yes' 출력
            print('yes')
      elif light_n == -1:                                   # 만약 전구의 최종 상태가 off라면, 'no' 출력
            print('no')