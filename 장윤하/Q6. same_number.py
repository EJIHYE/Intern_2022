"""
문제
앞뒤가 같은 수는 바로 쓴 값과 거꾸로 쓴 값이 같은 수이다. 다음과 같은 예를 들 수 있다.
1
44
101
2002
8972798
1111111111111

0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99, 101, 111, ... 과 같이, 0 이상의 앞뒤가 같은 수를 크기 순으로 나열할 때, n 번째 수를 계산하는 프로그램을 작성하라.

n은 1부터 시작하며 크기에는 제한이 없다.

입출력예
예 1) 1 => 0
예 2) 4 => 3
예 3) 30 => 202
예 4) 100 => 909
예 5) 30000 => 200000002
예 6) 1000000 => 90000000009
"""
"""
========================================================================
과제1. 앞뒤가 같은 수(n)를 크기순으로 나열하세요 (0 <= n <= 100).
     - 출력값 : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99
========================================================================
"""
same_number = []                    # 회문을 저장할 리스트
for i in range(0, 101):             # 0부터 100까지
    if str(i) == str(i)[::-1]:      # 해당 문자열과 그것을 거꾸로 한 문자열이 같다면 (회문이라면)
        same_number.append(i)       # 해당 회문을 리스트에 저장
print(same_number)
"""
========================================================================
과제2. 0 이상의 앞뒤가 같은 수를 크기순으로 나열하고 30,000번째 수를 출력하세요.
      - 출력값 : 200000002
========================================================================
"""

def get_index(n):                                       # 해당 위치의 값을 찾는 함수
    number = 1; length_lst = 0; same_number = None      # number = 자릿수, length_lst = 리스트의 길이
    while length_lst < n:                               # 원하는 길이만큼 반복
        same_number = get_samenumber(number)            # same_number = 앞서 지정한 함수에 자릿수를 대입해 얻은 리스트
        length_lst += len(same_number)                  # 리스트의 길이를 계속 더함
        number += 1                                     # 자릿수를 1씩 추가
    return same_number[n - 1 - length_lst]              # 리스트는 자릿수마다 초기화, 즉 n - 1번째 인덱스를 구하기 위해서는
                                                # 해당 자릿수 이전 자릿수에서 얻은 회문의 개수를 더한 값들을 빼고 인덱스를 찾아야 함

def get_samenumber(l):                                  # 회문을 얻을 함수
    if l < 1: return []                                                 # 해당 문자 자릿수가 1보다 작다면 빈 리스트
    if l == 1: return [x for x in range(10)]                            # 해당 문자 자릿수가 1이라면 그대로 반환

    same_number = []                                                    # 회문을 저장할 리스트 (초기화)
    if l % 2 == 0:                                                      # 자릿수가 짝수인 경우 반으로 나눴을 떄 양쪽의 글자가 대칭
        len_a = l // 2                                                  # 양쪽 글자 수는 각각 전체 자릿수를 2로 나눈 몫
        for a in range(10 ** (len_a - 1), 10 ** len_a):                 # 네자릿수라면 양쪽에 10부터 99까지 숫자를 추가 (즉, 10의 1제곱부터 10의 2제곱까지 범위 설정)
            same_number.append(int((str(a) + str(a)[::-1])))            # 왼쪽에 숫자를 추가하고 그것을 반전시켜 오른쪽에 추가하여 붙인다.
            same_number.sort()                                          # 리스트 정렬

    else:                                                               # 자릿수가 홀수인 경우 가운데 글자는 0~9 대입, 양쪽은 짝수와 동일함
        len_a = (l -1) // 2                                             # 정수의 값을 갖도록 1을 뺀 후 2로 나눈다
        for j in range(10):                                                # 가운데 추가할 글자
            for a in range(10 ** (len_a - 1), 10 ** len_a):                # 짝수와 동일
                same_number.append(int((str(a) + str(j) + str(a)[::-1])))  # 양쪽에 대칭수를 추가하고 가운데에 숫자를 추가
                same_number.sort()
    return same_number                                                      # 최종적으로 리스트 반환



if __name__ == '__main__':
    print(get_index(30000))