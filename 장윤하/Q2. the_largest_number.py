"""
음수가 아닌 수들이 주어졌을 때 그 수들을 이어서 만들 수 있는 가장 큰 수를 구하시오.

예를 들어 [1,2,3]이 주어졌을 때 만들 수 있는 가장 큰 수는 321이고, [3, 30, 34, 5, 9] 가 주어지면 만들 수 있는 가장 큰 수는 9534330이다.
"""
"""
========================================================================
과제1. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - num_list = [1, 2, 3] 
      - 출력값 : 321
========================================================================
"""

def the_largest_number(num):                            # 함수 생성
    num_list = ' '.join(list(map(str, num))).split()    # 리스트 각 요소의 공백 제거

    max_length = len(max(num_list, key = len))         # 가장 문자열이 긴 요소의 길이를 저장

    tup = lambda x: x + x[-1] * (max_length - len(x))  # 정렬 기준 = x의 빈 문자열만큼 x의 마지막 글자를 채워 넣어 반환

    return "".join(sorted(num_list, key=tup, reverse=True))  # 정렬 기준에 따라 오름차순 정렬

if __name__ == '__main__':
    num = input("num_list를 입력하세요: ").split(',')
    print(the_largest_number(num))


"""
========================================================================
과제2. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - 조건 2. 아래와 같은 입력값을 도출하시오. 
      - num_list = [3, 30, 34, 5, 9] 
      - 출력값 : 9,534,330
========================================================================
"""

if __name__ == '__main__':
    num = input("num_list를 입력하세요: ").split(',')
    print(the_largest_number(num))